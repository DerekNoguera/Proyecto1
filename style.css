.container-grey {
  background-color: lightgray;
  height: auto;
  width: 830px;
  border-radius: 1px solid black;
  margin-left: 21%;
}
.container-border {
  display: inline-block;
  border: solid black 1px;
  height: 94%;
  width: 90%;
  background-color: white;
  margin-left: 40px;
  margin: 40px;
}
.nombre {
  display: flex;
  justify-content: center;
  font-size: 55px;
}

.recepcionista {
  display: flex;
  font-size: 25px;
  justify-content: center;
  margin-top: -30px;
}
.tamaño-img {
  width: 20px;
  height: 20px;
}
.txt-decoration {
  text-decoration: none;
  margin-top: -20px;
  margin-top: 2px;
  color: black;
}
.flex-img {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 3em;
  padding-top: 10px;
}

.flex-img-interno {
  display: flex;
  gap: 5px;
}
/*-------Skill----------*/
.skill {
  margin-top: 40px;
  margin-left: 40px;
}
.tamaño-svg {
  /*damos el tamaño de el svg y que concuerde con el tamaño de el circulo*/
  width: 90px;
  height: 90px;
}
circle {
  fill: none;
  /*esa etiqueta fill es el relleno que le quiero dar a mi circle, en este caso no va a tener por eso esta en none*/
  stroke: #aaa;
  /* el stroke es el border de el circulo*/

  stroke-width: 16px;
  /*el stroke width es el tamaño de el border que quiero que tenga mi circle pero el circulo va a quedar mal
    entonces tengo que rebajarle ese 16px al radio*2 que tengo de circulo, en este caso mi radio es 40 *2 serian 80, le restamos 16
    serian 64 y ese 64 la mitad va ser 32, por lo tanto mi radio de circulo ahora va a ser 32 no 40*/

  stroke-dasharray: 100 100;

  transform: rotate(-90deg);
  /*se usa el rotate (-90) porque el desharray empieza a contar desde la posicion 90grados de el
    circulo, pero sigue mal porque el punto de registro de el circulo no es el centro.*/

  transform-origin: 50%;
  /*el transform-origin lo que va a hacer es que el punto de registro de la rotacion va a ser
    50% en el eje X y eje Y*/
}

circle:nth-child(2) {
  /*nth-child(2) lo que haces es decir el circulo que voy a modificar, en este caso seria el circulo 2*/

  stroke-dasharray: 0 100;
  /*dasharray va a emepezar desde 0 hasta 100 porque estoy usando keyframes y la variable la puse en las keyframes, 
    la variable seria la siguiente "stroke-dasharray: var(--porcentaje) 100;" pero ahora empieza desde 0 porque tiene que
    empezar desde 0 para que la aminación se ejectute en las @keyframes*/
  /*la variable --porcentaje lo que va hacer es modificar el primer valor y se declara como 
    "var(porcentaje)"*/
  /*si mi pathlength vale 100 entonces va a ser 25% de 100*/
  /*va a haber un patron que controla la linea y los saltos, el primer valor es el tamaño de la linea y el segundo
    es el espacio que hay entre esa linea y la proxima*/
  /*puedo hacer que los valores de el desharray esten valorizados con el valor de el circulo, el valor sera desde que arranca el circulo
    hastra que termina*/

  stroke: grey;
  /*este stroke va a ser el color de la barra de porcentaje*/
  animation: rellenar 0.35s linear forwards;
  /*nombre que le voy a dar a las @keyframes en este caso seria "rellenar", la duracion que seria .35segundos
    que sea linear y que el forwards si no lo pongo la animacion se va a reiniciar, el fordwars es para que la animacion
    de @keyframes se quede en el ultimo fotograma*/
}
@keyframes rellenar {
  to {
    stroke-dasharray: var(--porcentaje) 100;
  }
  /*la keyframes llamda rellenar va a empezar desde */
}
.contenedor-porcentajes {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 40px;
}
.span-porcentaje {
  position: relative;
}

.span-porcentaje span {
  position: absolute;
  top: 0%;
  left: 0%;
  right: 0%;
  bottom: 0%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 15px;
}
.h2-txt{
    font-size:14px;
}
.txt-flex{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 45px;
    margin-top: -15px;
    margin-left: -8px;
}
.secction-orden {
    display: grid;
    grid-template-columns: 410px auto;
    padding-top: 5px;
}
.txt-experiencie {
    margin-left: 38px;
}

.txt-licoreria {
    margin-left: 40px;
    font-size: 15px;
}

.listas {
    margin-left: 20px;
}

.img-trabajador {
    width: 280px;
    height: 355px;
    margin-left: 33px;
    margin-top: 40px;
}
/*FOOOTERR*/
.footer-grid{
    display: grid;
    grid-template-columns: 340px 400px;
    margin-left: 40px;
    margin-top: 10px;
}
.footer-div1{
 border-right: solid 1px black;
 
}
.footer-div2{
    margin-left: 30px;
}
.h3-footer{
    font-size: 15px;
    margin-top: 20px;
}
.h3-footer1{
    font-size: 15px;
    margin-top: 30px;
}
.listas-footer{
    margin-left: -10px;
    margin-top: -2px;
    font-size: 14px;
}
.ul-footer{
    margin-top: -10px;
}
.img-footer-tamaño{
    height: 40px;
    width: 50px;
    object-fit: cover;
}
.grid-footer-img{
    display: grid;
    grid-template-columns: 90px 80px;
    row-gap: 1em;
}

.text1{
    border-radius: 10px;
    margin-top: 4px;
    text-align: center;
}
.boton1{
    height: 20px;
    width: 60px;
    border-radius: 10px;
    margin-left: 8px;
    margin-top: 4px;
}
.boton1:hover{
    background-color: lightskyblue;
}
.flex1{
    display: flex;
    flex-direction:row;
    margin-left: 100px;
    padding-bottom: 2px;
}
.ultimo-footer{
    height: 20px;
    width: 100%;
}
.flex-mayor-inputs{
    display: flex;
    flex-direction: row;
    margin-left: 300px;
    margin-top: -70px;
}


